2025-08-14 12:24:33,230 [main] INFO  c.d.c.e.CommunityEnvironment tid:a03fd1f395ed5c11cc5666fc88010af5 - Automatically starting all instances
2025-08-14 12:24:38,454 [main] ERROR c.d.c.e.CommunityEnvironment tid:a03fd1f395ed5c11cc5666fc88010af5 - Failed to start participant1: Ledger API server failed to start: FailedToStartLedgerApiServer(
  java.lang.IllegalArgumentException: Failed to create RSA256 verifier: Error(Symbol(fromCrtFile),jwt-public.pem (No such file or directory))
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.$anonfun$verifier$2(AuthServiceConfig.scala:87)
	at scalaz.$bslash$div.valueOr(Either.scala:215)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.verifier(AuthServiceConfig.scala:87)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.create(AuthServiceConfig.scala:93)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$buildLedgerApiServerOwner$1(StartableStoppableLedgerApiServer.scala:207)
	at scala.collection.immutable.List.map(List.scala:246)
	at scala.collection.immutable.List.map(List.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.buildLedgerApiServerOwner(StartableStoppableLedgerApiServer.scala:205)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$2(StartableStoppableLedgerApiServer.scala:144)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.internalPerformUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.performUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$1(StartableStoppableLedgerApiServer.scala:135)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$execute$1(SimpleExecutionQueue.scala:54)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.$anonfun$performUnlessClosingUSF$1(PerformUnlessClosing.scala:87)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.util.SimpleExecutionQueue.internalPerformUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF(PerformUnlessClosing.scala:87)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF$(PerformUnlessClosing.scala:84)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingUSF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$genExecute$1(SimpleExecutionQueue.scala:98)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.runTask$1(SimpleExecutionQueue.scala:259)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.$anonfun$chain$6(SimpleExecutionQueue.scala:264)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:477)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitForExecution(DirectExecutionContext.scala:21)
	at scala.concurrent.BatchingExecutor.submitSyncBatched(BatchingExecutor.scala:254)
	at scala.concurrent.BatchingExecutor.submitSyncBatched$(BatchingExecutor.scala:245)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitSyncBatched(DirectExecutionContext.scala:14)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.execute(DirectExecutionContext.scala:23)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:312)
	at scala.concurrent.impl.Promise$DefaultPromise.transformWith(Promise.scala:131)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$Ops$.transformWith$extension(FutureUnlessShutdown.scala:163)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.chain(SimpleExecutionQueue.scala:286)
	at com.digitalasset.canton.util.SimpleExecutionQueue.genExecute(SimpleExecutionQueue.scala:92)
	at com.digitalasset.canton.util.SimpleExecutionQueue.execute(SimpleExecutionQueue.scala:52)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.start(StartableStoppableLedgerApiServer.scala:134)
	at com.digitalasset.canton.participant.ledger.api.CantonLedgerApiServerWrapper$.$anonfun$initialize$2(CantonLedgerApiServerWrapper.scala:162)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$$anon$3.$anonfun$flatMap$1(FutureUnlessShutdown.scala:245)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)

)
2025-08-14 12:32:10,646 [main] INFO  c.d.c.e.CommunityEnvironment tid:c488eb05132908e1e957909c500a101f - Automatically starting all instances
2025-08-14 12:32:14,212 [main] ERROR c.d.c.e.CommunityEnvironment tid:c488eb05132908e1e957909c500a101f - Failed to start participant1: Ledger API server failed to start: FailedToStartLedgerApiServer(
  java.lang.IllegalArgumentException: Failed to create RSA256 verifier: Error(Symbol(fromCrtFile),Unable to initialize, java.io.IOException: Too short)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.$anonfun$verifier$2(AuthServiceConfig.scala:87)
	at scalaz.$bslash$div.valueOr(Either.scala:215)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.verifier(AuthServiceConfig.scala:87)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.create(AuthServiceConfig.scala:93)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$buildLedgerApiServerOwner$1(StartableStoppableLedgerApiServer.scala:207)
	at scala.collection.immutable.List.map(List.scala:246)
	at scala.collection.immutable.List.map(List.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.buildLedgerApiServerOwner(StartableStoppableLedgerApiServer.scala:205)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$2(StartableStoppableLedgerApiServer.scala:144)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.internalPerformUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.performUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$1(StartableStoppableLedgerApiServer.scala:135)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$execute$1(SimpleExecutionQueue.scala:54)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.$anonfun$performUnlessClosingUSF$1(PerformUnlessClosing.scala:87)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.util.SimpleExecutionQueue.internalPerformUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF(PerformUnlessClosing.scala:87)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF$(PerformUnlessClosing.scala:84)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingUSF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$genExecute$1(SimpleExecutionQueue.scala:98)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.runTask$1(SimpleExecutionQueue.scala:259)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.$anonfun$chain$6(SimpleExecutionQueue.scala:264)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:477)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitForExecution(DirectExecutionContext.scala:21)
	at scala.concurrent.BatchingExecutor.submitSyncBatched(BatchingExecutor.scala:254)
	at scala.concurrent.BatchingExecutor.submitSyncBatched$(BatchingExecutor.scala:245)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitSyncBatched(DirectExecutionContext.scala:14)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.execute(DirectExecutionContext.scala:23)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:312)
	at scala.concurrent.impl.Promise$DefaultPromise.transformWith(Promise.scala:131)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$Ops$.transformWith$extension(FutureUnlessShutdown.scala:163)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.chain(SimpleExecutionQueue.scala:286)
	at com.digitalasset.canton.util.SimpleExecutionQueue.genExecute(SimpleExecutionQueue.scala:92)
	at com.digitalasset.canton.util.SimpleExecutionQueue.execute(SimpleExecutionQueue.scala:52)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.start(StartableStoppableLedgerApiServer.scala:134)
	at com.digitalasset.canton.participant.ledger.api.CantonLedgerApiServerWrapper$.$anonfun$initialize$2(CantonLedgerApiServerWrapper.scala:162)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$$anon$3.$anonfun$flatMap$1(FutureUnlessShutdown.scala:245)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)

)
2025-08-14 13:21:36,898 [main] INFO  c.d.c.e.CommunityEnvironment tid:6181a3465e3846ce2cb0b129a79d4c0b - Automatically starting all instances
2025-08-14 13:21:40,598 [main] ERROR c.d.c.e.CommunityEnvironment tid:6181a3465e3846ce2cb0b129a79d4c0b - Failed to start participant1: Ledger API server failed to start: FailedToStartLedgerApiServer(
  java.lang.IllegalArgumentException: Failed to create RSA256 verifier: Error(Symbol(fromCrtFile),Unable to initialize, java.io.IOException: Too short)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.$anonfun$verifier$2(AuthServiceConfig.scala:87)
	at scalaz.$bslash$div.valueOr(Either.scala:215)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.verifier(AuthServiceConfig.scala:87)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.create(AuthServiceConfig.scala:93)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$buildLedgerApiServerOwner$1(StartableStoppableLedgerApiServer.scala:207)
	at scala.collection.immutable.List.map(List.scala:246)
	at scala.collection.immutable.List.map(List.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.buildLedgerApiServerOwner(StartableStoppableLedgerApiServer.scala:205)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$2(StartableStoppableLedgerApiServer.scala:144)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.internalPerformUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.performUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$1(StartableStoppableLedgerApiServer.scala:135)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$execute$1(SimpleExecutionQueue.scala:54)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.$anonfun$performUnlessClosingUSF$1(PerformUnlessClosing.scala:87)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.util.SimpleExecutionQueue.internalPerformUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF(PerformUnlessClosing.scala:87)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF$(PerformUnlessClosing.scala:84)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingUSF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$genExecute$1(SimpleExecutionQueue.scala:98)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.runTask$1(SimpleExecutionQueue.scala:259)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.$anonfun$chain$6(SimpleExecutionQueue.scala:264)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:477)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitForExecution(DirectExecutionContext.scala:21)
	at scala.concurrent.BatchingExecutor.submitSyncBatched(BatchingExecutor.scala:254)
	at scala.concurrent.BatchingExecutor.submitSyncBatched$(BatchingExecutor.scala:245)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitSyncBatched(DirectExecutionContext.scala:14)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.execute(DirectExecutionContext.scala:23)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:312)
	at scala.concurrent.impl.Promise$DefaultPromise.transformWith(Promise.scala:131)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$Ops$.transformWith$extension(FutureUnlessShutdown.scala:163)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.chain(SimpleExecutionQueue.scala:286)
	at com.digitalasset.canton.util.SimpleExecutionQueue.genExecute(SimpleExecutionQueue.scala:92)
	at com.digitalasset.canton.util.SimpleExecutionQueue.execute(SimpleExecutionQueue.scala:52)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.start(StartableStoppableLedgerApiServer.scala:134)
	at com.digitalasset.canton.participant.ledger.api.CantonLedgerApiServerWrapper$.$anonfun$initialize$2(CantonLedgerApiServerWrapper.scala:162)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$$anon$3.$anonfun$flatMap$1(FutureUnlessShutdown.scala:245)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)

)
2025-08-20 05:21:48,843 [canton-env-ec-37] INFO  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 05:21:48,844 [canton-env-ec-37] DEBUG c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"initializationFailTimeout":1,"numThreads":2,"password":"****","poolName":"slick-mydomain-1","url":"****","user":"canton"}))
2025-08-20 05:21:50,369 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:48,843 [canton-env-ec-36] INFO  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 05:21:48,844 [canton-env-ec-36] DEBUG c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"initializationFailTimeout":1,"numThreads":2,"password":"****","poolName":"slick-participant1-2","url":"****","user":"canton"}))
2025-08-20 05:21:50,369 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:51,737 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:51,740 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:53,087 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:53,093 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:54,426 [canton-env-ec-37] ERROR c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:54,437 [canton-env-ec-36] ERROR c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:48,754 [main] INFO  c.d.c.e.CommunityEnvironment tid:50af35541188a628681d99990d61c854 - Automatically starting all instances
2025-08-20 05:21:54,465 [main] ERROR c.d.c.e.CommunityEnvironment tid:50af35541188a628681d99990d61c854 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-20 07:54:59,005 [canton-env-ec-41] INFO  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 07:54:59,007 [canton-env-ec-41] DEBUG c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-2","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","user":"canton"}}))
2025-08-20 07:55:00,751 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:54:59,005 [canton-env-ec-36] INFO  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 07:54:59,007 [canton-env-ec-36] DEBUG c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-1","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","user":"canton"}}))
2025-08-20 07:55:00,751 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:02,109 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:02,112 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:03,459 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:03,459 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:04,804 [canton-env-ec-36] ERROR c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:04,806 [canton-env-ec-41] ERROR c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:54:58,924 [main] INFO  c.d.c.e.CommunityEnvironment tid:e90333139a7f338e1fe8e3d146408241 - Automatically starting all instances
2025-08-20 07:55:04,842 [main] ERROR c.d.c.e.CommunityEnvironment tid:e90333139a7f338e1fe8e3d146408241 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-20 09:23:00,383 [main] INFO  c.d.c.e.CommunityEnvironment tid:606abae80d633990c3a6c081947ba5a4 - Automatically starting all instances
2025-08-20 09:23:02,128 [main] ERROR c.d.c.e.CommunityEnvironment tid:606abae80d633990c3a6c081947ba5a4 - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
