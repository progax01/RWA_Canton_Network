2025-08-14 12:24:33,230 [main] INFO  c.d.c.e.CommunityEnvironment tid:a03fd1f395ed5c11cc5666fc88010af5 - Automatically starting all instances
2025-08-14 12:24:38,454 [main] ERROR c.d.c.e.CommunityEnvironment tid:a03fd1f395ed5c11cc5666fc88010af5 - Failed to start participant1: Ledger API server failed to start: FailedToStartLedgerApiServer(
  java.lang.IllegalArgumentException: Failed to create RSA256 verifier: Error(Symbol(fromCrtFile),jwt-public.pem (No such file or directory))
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.$anonfun$verifier$2(AuthServiceConfig.scala:87)
	at scalaz.$bslash$div.valueOr(Either.scala:215)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.verifier(AuthServiceConfig.scala:87)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.create(AuthServiceConfig.scala:93)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$buildLedgerApiServerOwner$1(StartableStoppableLedgerApiServer.scala:207)
	at scala.collection.immutable.List.map(List.scala:246)
	at scala.collection.immutable.List.map(List.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.buildLedgerApiServerOwner(StartableStoppableLedgerApiServer.scala:205)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$2(StartableStoppableLedgerApiServer.scala:144)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.internalPerformUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.performUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$1(StartableStoppableLedgerApiServer.scala:135)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$execute$1(SimpleExecutionQueue.scala:54)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.$anonfun$performUnlessClosingUSF$1(PerformUnlessClosing.scala:87)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.util.SimpleExecutionQueue.internalPerformUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF(PerformUnlessClosing.scala:87)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF$(PerformUnlessClosing.scala:84)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingUSF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$genExecute$1(SimpleExecutionQueue.scala:98)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.runTask$1(SimpleExecutionQueue.scala:259)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.$anonfun$chain$6(SimpleExecutionQueue.scala:264)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:477)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitForExecution(DirectExecutionContext.scala:21)
	at scala.concurrent.BatchingExecutor.submitSyncBatched(BatchingExecutor.scala:254)
	at scala.concurrent.BatchingExecutor.submitSyncBatched$(BatchingExecutor.scala:245)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitSyncBatched(DirectExecutionContext.scala:14)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.execute(DirectExecutionContext.scala:23)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:312)
	at scala.concurrent.impl.Promise$DefaultPromise.transformWith(Promise.scala:131)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$Ops$.transformWith$extension(FutureUnlessShutdown.scala:163)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.chain(SimpleExecutionQueue.scala:286)
	at com.digitalasset.canton.util.SimpleExecutionQueue.genExecute(SimpleExecutionQueue.scala:92)
	at com.digitalasset.canton.util.SimpleExecutionQueue.execute(SimpleExecutionQueue.scala:52)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.start(StartableStoppableLedgerApiServer.scala:134)
	at com.digitalasset.canton.participant.ledger.api.CantonLedgerApiServerWrapper$.$anonfun$initialize$2(CantonLedgerApiServerWrapper.scala:162)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$$anon$3.$anonfun$flatMap$1(FutureUnlessShutdown.scala:245)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)

)
2025-08-14 12:32:10,646 [main] INFO  c.d.c.e.CommunityEnvironment tid:c488eb05132908e1e957909c500a101f - Automatically starting all instances
2025-08-14 12:32:14,212 [main] ERROR c.d.c.e.CommunityEnvironment tid:c488eb05132908e1e957909c500a101f - Failed to start participant1: Ledger API server failed to start: FailedToStartLedgerApiServer(
  java.lang.IllegalArgumentException: Failed to create RSA256 verifier: Error(Symbol(fromCrtFile),Unable to initialize, java.io.IOException: Too short)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.$anonfun$verifier$2(AuthServiceConfig.scala:87)
	at scalaz.$bslash$div.valueOr(Either.scala:215)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.verifier(AuthServiceConfig.scala:87)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.create(AuthServiceConfig.scala:93)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$buildLedgerApiServerOwner$1(StartableStoppableLedgerApiServer.scala:207)
	at scala.collection.immutable.List.map(List.scala:246)
	at scala.collection.immutable.List.map(List.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.buildLedgerApiServerOwner(StartableStoppableLedgerApiServer.scala:205)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$2(StartableStoppableLedgerApiServer.scala:144)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.internalPerformUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.performUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$1(StartableStoppableLedgerApiServer.scala:135)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$execute$1(SimpleExecutionQueue.scala:54)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.$anonfun$performUnlessClosingUSF$1(PerformUnlessClosing.scala:87)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.util.SimpleExecutionQueue.internalPerformUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF(PerformUnlessClosing.scala:87)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF$(PerformUnlessClosing.scala:84)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingUSF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$genExecute$1(SimpleExecutionQueue.scala:98)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.runTask$1(SimpleExecutionQueue.scala:259)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.$anonfun$chain$6(SimpleExecutionQueue.scala:264)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:477)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitForExecution(DirectExecutionContext.scala:21)
	at scala.concurrent.BatchingExecutor.submitSyncBatched(BatchingExecutor.scala:254)
	at scala.concurrent.BatchingExecutor.submitSyncBatched$(BatchingExecutor.scala:245)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitSyncBatched(DirectExecutionContext.scala:14)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.execute(DirectExecutionContext.scala:23)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:312)
	at scala.concurrent.impl.Promise$DefaultPromise.transformWith(Promise.scala:131)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$Ops$.transformWith$extension(FutureUnlessShutdown.scala:163)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.chain(SimpleExecutionQueue.scala:286)
	at com.digitalasset.canton.util.SimpleExecutionQueue.genExecute(SimpleExecutionQueue.scala:92)
	at com.digitalasset.canton.util.SimpleExecutionQueue.execute(SimpleExecutionQueue.scala:52)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.start(StartableStoppableLedgerApiServer.scala:134)
	at com.digitalasset.canton.participant.ledger.api.CantonLedgerApiServerWrapper$.$anonfun$initialize$2(CantonLedgerApiServerWrapper.scala:162)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$$anon$3.$anonfun$flatMap$1(FutureUnlessShutdown.scala:245)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)

)
2025-08-14 13:21:36,898 [main] INFO  c.d.c.e.CommunityEnvironment tid:6181a3465e3846ce2cb0b129a79d4c0b - Automatically starting all instances
2025-08-14 13:21:40,598 [main] ERROR c.d.c.e.CommunityEnvironment tid:6181a3465e3846ce2cb0b129a79d4c0b - Failed to start participant1: Ledger API server failed to start: FailedToStartLedgerApiServer(
  java.lang.IllegalArgumentException: Failed to create RSA256 verifier: Error(Symbol(fromCrtFile),Unable to initialize, java.io.IOException: Too short)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.$anonfun$verifier$2(AuthServiceConfig.scala:87)
	at scalaz.$bslash$div.valueOr(Either.scala:215)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.verifier(AuthServiceConfig.scala:87)
	at com.digitalasset.canton.config.AuthServiceConfig$JwtRs256Crt.create(AuthServiceConfig.scala:93)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$buildLedgerApiServerOwner$1(StartableStoppableLedgerApiServer.scala:207)
	at scala.collection.immutable.List.map(List.scala:246)
	at scala.collection.immutable.List.map(List.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.buildLedgerApiServerOwner(StartableStoppableLedgerApiServer.scala:205)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$2(StartableStoppableLedgerApiServer.scala:144)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.internalPerformUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.performUnlessClosingF(StartableStoppableLedgerApiServer.scala:90)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.$anonfun$start$1(StartableStoppableLedgerApiServer.scala:135)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$execute$1(SimpleExecutionQueue.scala:54)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.$anonfun$performUnlessClosingUSF$1(PerformUnlessClosing.scala:87)
	at scala.util.Try$.apply(Try.scala:210)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF(PerformUnlessClosing.scala:96)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.internalPerformUnlessClosingF$(PerformUnlessClosing.scala:89)
	at com.digitalasset.canton.util.SimpleExecutionQueue.internalPerformUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF(PerformUnlessClosing.scala:82)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingF$(PerformUnlessClosing.scala:79)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF(PerformUnlessClosing.scala:87)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosingUSF$(PerformUnlessClosing.scala:84)
	at com.digitalasset.canton.util.SimpleExecutionQueue.performUnlessClosingUSF(SimpleExecutionQueue.scala:33)
	at com.digitalasset.canton.util.SimpleExecutionQueue.$anonfun$genExecute$1(SimpleExecutionQueue.scala:98)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.runTask$1(SimpleExecutionQueue.scala:259)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.$anonfun$chain$6(SimpleExecutionQueue.scala:264)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:477)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitForExecution(DirectExecutionContext.scala:21)
	at scala.concurrent.BatchingExecutor.submitSyncBatched(BatchingExecutor.scala:254)
	at scala.concurrent.BatchingExecutor.submitSyncBatched$(BatchingExecutor.scala:245)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.submitSyncBatched(DirectExecutionContext.scala:14)
	at com.digitalasset.canton.concurrent.DirectExecutionContext.execute(DirectExecutionContext.scala:23)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:429)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:338)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:312)
	at scala.concurrent.impl.Promise$DefaultPromise.transformWith(Promise.scala:131)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$Ops$.transformWith$extension(FutureUnlessShutdown.scala:163)
	at com.digitalasset.canton.util.SimpleExecutionQueue$TaskCell.chain(SimpleExecutionQueue.scala:286)
	at com.digitalasset.canton.util.SimpleExecutionQueue.genExecute(SimpleExecutionQueue.scala:92)
	at com.digitalasset.canton.util.SimpleExecutionQueue.execute(SimpleExecutionQueue.scala:52)
	at com.digitalasset.canton.participant.ledger.api.StartableStoppableLedgerApiServer.start(StartableStoppableLedgerApiServer.scala:134)
	at com.digitalasset.canton.participant.ledger.api.CantonLedgerApiServerWrapper$.$anonfun$initialize$2(CantonLedgerApiServerWrapper.scala:162)
	at com.digitalasset.canton.lifecycle.FutureUnlessShutdownImpl$$anon$3.$anonfun$flatMap$1(FutureUnlessShutdown.scala:245)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)

)
2025-08-20 05:21:48,843 [canton-env-ec-37] INFO  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 05:21:48,844 [canton-env-ec-37] DEBUG c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"initializationFailTimeout":1,"numThreads":2,"password":"****","poolName":"slick-mydomain-1","url":"****","user":"canton"}))
2025-08-20 05:21:50,369 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:48,843 [canton-env-ec-36] INFO  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 05:21:48,844 [canton-env-ec-36] DEBUG c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"initializationFailTimeout":1,"numThreads":2,"password":"****","poolName":"slick-participant1-2","url":"****","user":"canton"}))
2025-08-20 05:21:50,369 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:51,737 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:51,740 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:53,087 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:53,093 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:54,426 [canton-env-ec-37] ERROR c.d.c.r.DbStorage:mydomain tid:8e3f9f73687ccf83f7355a76e4a58cf9 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:54,437 [canton-env-ec-36] ERROR c.d.c.r.DbStorage:participant1 tid:a075fa44f23376d0e14b6bd9bca111bf - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 05:21:48,754 [main] INFO  c.d.c.e.CommunityEnvironment tid:50af35541188a628681d99990d61c854 - Automatically starting all instances
2025-08-20 05:21:54,465 [main] ERROR c.d.c.e.CommunityEnvironment tid:50af35541188a628681d99990d61c854 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:698)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:207)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-20 07:54:59,005 [canton-env-ec-41] INFO  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 07:54:59,007 [canton-env-ec-41] DEBUG c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-2","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","user":"canton"}}))
2025-08-20 07:55:00,751 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:54:59,005 [canton-env-ec-36] INFO  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-20 07:54:59,007 [canton-env-ec-36] DEBUG c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-1","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","user":"canton"}}))
2025-08-20 07:55:00,751 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:02,109 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:02,112 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:03,459 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:03,459 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:04,804 [canton-env-ec-36] ERROR c.d.c.r.DbStorage:mydomain tid:df0635eee6f761b71d3c5276504ab44e - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:55:04,806 [canton-env-ec-41] ERROR c.d.c.r.DbStorage:participant1 tid:9c1609e4932bf0fbd67fb356e6766f4c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-20 07:54:58,924 [main] INFO  c.d.c.e.CommunityEnvironment tid:e90333139a7f338e1fe8e3d146408241 - Automatically starting all instances
2025-08-20 07:55:04,842 [main] ERROR c.d.c.e.CommunityEnvironment tid:e90333139a7f338e1fe8e3d146408241 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "canton"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "canton"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-20 09:23:00,383 [main] INFO  c.d.c.e.CommunityEnvironment tid:606abae80d633990c3a6c081947ba5a4 - Automatically starting all instances
2025-08-20 09:23:02,128 [main] ERROR c.d.c.e.CommunityEnvironment tid:606abae80d633990c3a6c081947ba5a4 - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
2025-08-21 14:21:30,527 [main] INFO  c.d.c.e.CommunityEnvironment tid:3f8b7099fa9042d5a9f432743eaa5b53 - Automatically starting all instances
2025-08-21 14:21:32,230 [main] ERROR c.d.c.e.CommunityEnvironment tid:3f8b7099fa9042d5a9f432743eaa5b53 - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
2025-08-22 13:34:51,129 [canton-env-ec-103] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:b5ab7d0445f58c59ef8811b1bd62d061 - Authorization error: Could not verify JWT token: The Token has expired on 2025-08-22T13:04:29Z.
2025-08-22 13:34:51,147 [canton-env-ec-165] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:b5ab7d0445f58c59ef8811b1bd62d061 - Failed to authorize the token: IdentityProviderConfigByIssuerNotFound(rwa-platform)
2025-08-22 13:34:51,151 [canton-env-ec-165] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:b5ab7d0445f58c59ef8811b1bd62d061 - Request c.d.l.a.v.PackageService/ListPackages by /127.0.0.1:45174: received a message 
  Request tid:b5ab7d0445f58c59ef8811b1bd62d061
2025-08-22 13:34:51,158 [canton-env-ec-165] WARN  c.d.c.a.Authorizer:participant=participant1 tid:b5ab7d0445f58c59ef8811b1bd62d061 - UNAUTHENTICATED(6,b5ab7d04): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-22 13:34:51,327 [canton-env-ec-103] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:e66403f0a4e544f66e0f9e2c6434e9c9 - Authorization error: Could not verify JWT token: The Token has expired on 2025-08-22T13:04:29Z.
2025-08-22 13:34:51,330 [canton-env-ec-165] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:e66403f0a4e544f66e0f9e2c6434e9c9 - Failed to authorize the token: IdentityProviderConfigByIssuerNotFound(rwa-platform)
2025-08-22 13:34:51,331 [canton-env-ec-159] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:e66403f0a4e544f66e0f9e2c6434e9c9 - Request c.d.l.a.v.PackageService/ListPackages by /127.0.0.1:45174: received a message 
  Request tid:e66403f0a4e544f66e0f9e2c6434e9c9
2025-08-22 13:34:51,332 [canton-env-ec-159] WARN  c.d.c.a.Authorizer:participant=participant1 tid:e66403f0a4e544f66e0f9e2c6434e9c9 - UNAUTHENTICATED(6,e66403f0): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-22 13:34:51,415 [canton-env-ec-165] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:e7e57a0522fbd7f79c879fa64e632375 - Authorization error: Could not verify JWT token: The Token has expired on 2025-08-22T13:04:29Z.
2025-08-22 13:34:51,418 [canton-env-ec-103] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:e7e57a0522fbd7f79c879fa64e632375 - Failed to authorize the token: IdentityProviderConfigByIssuerNotFound(rwa-platform)
2025-08-22 13:34:51,419 [canton-env-ec-103] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:e7e57a0522fbd7f79c879fa64e632375 - Request c.d.l.a.v.PackageService/ListPackages by /127.0.0.1:45174: received a message 
  Request tid:e7e57a0522fbd7f79c879fa64e632375
2025-08-22 13:34:51,420 [canton-env-ec-103] WARN  c.d.c.a.Authorizer:participant=participant1 tid:e7e57a0522fbd7f79c879fa64e632375 - UNAUTHENTICATED(6,e7e57a05): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-22 14:41:33,908 [canton-env-ec-37] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:05e12ae67c8ffa4b22fd59c8a5f4c76e - Authorization error: Could not verify JWT token: The Token has expired on 2025-08-22T13:04:29Z.
2025-08-22 14:41:33,916 [canton-env-ec-58] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:05e12ae67c8ffa4b22fd59c8a5f4c76e - Failed to authorize the token: IdentityProviderConfigByIssuerNotFound(rwa-platform)
2025-08-22 14:41:33,918 [canton-env-ec-41] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:05e12ae67c8ffa4b22fd59c8a5f4c76e - Request c.d.l.a.v.PackageService/ListPackages by /127.0.0.1:60398: received a message 
  Request tid:05e12ae67c8ffa4b22fd59c8a5f4c76e
2025-08-22 14:41:33,919 [canton-env-ec-41] WARN  c.d.c.a.Authorizer:participant=participant1 tid:05e12ae67c8ffa4b22fd59c8a5f4c76e - UNAUTHENTICATED(6,05e12ae6): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-24 11:36:53,544 [canton-env-ec-38] INFO  c.d.c.r.DbStorage:mydomain tid:da436ffd96faee9dd5260411676df69d - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 11:36:53,546 [canton-env-ec-38] DEBUG c.d.c.r.DbStorage:mydomain tid:da436ffd96faee9dd5260411676df69d - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-1","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 11:36:55,049 [canton-env-ec-38] WARN  c.d.c.r.DbStorage:mydomain tid:da436ffd96faee9dd5260411676df69d - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:53,545 [canton-env-ec-35] INFO  c.d.c.r.DbStorage:participant1 tid:ca709e5866aa4a59947032bdf2504b57 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 11:36:53,546 [canton-env-ec-35] DEBUG c.d.c.r.DbStorage:participant1 tid:ca709e5866aa4a59947032bdf2504b57 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-2","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 11:36:55,049 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:participant1 tid:ca709e5866aa4a59947032bdf2504b57 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:56,407 [canton-env-ec-38] WARN  c.d.c.r.DbStorage:mydomain tid:da436ffd96faee9dd5260411676df69d - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:56,422 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:participant1 tid:ca709e5866aa4a59947032bdf2504b57 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:57,745 [canton-env-ec-38] WARN  c.d.c.r.DbStorage:mydomain tid:da436ffd96faee9dd5260411676df69d - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:57,769 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:participant1 tid:ca709e5866aa4a59947032bdf2504b57 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:59,082 [canton-env-ec-38] ERROR c.d.c.r.DbStorage:mydomain tid:da436ffd96faee9dd5260411676df69d - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:59,098 [canton-env-ec-35] ERROR c.d.c.r.DbStorage:participant1 tid:ca709e5866aa4a59947032bdf2504b57 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 11:36:53,459 [main] INFO  c.d.c.e.CommunityEnvironment tid:bc0ab5c3f138a0d18cd3fa41921e1f30 - Automatically starting all instances
2025-08-24 11:36:59,117 [main] ERROR c.d.c.e.CommunityEnvironment tid:bc0ab5c3f138a0d18cd3fa41921e1f30 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-24 12:46:02,082 [canton-env-ec-36] INFO  c.d.c.r.DbStorage:mydomain tid:ebc78d13e129cfe4692f8b917fa62587 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:46:02,084 [canton-env-ec-36] DEBUG c.d.c.r.DbStorage:mydomain tid:ebc78d13e129cfe4692f8b917fa62587 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-2","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:46:03,636 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:ebc78d13e129cfe4692f8b917fa62587 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:02,082 [canton-env-ec-35] INFO  c.d.c.r.DbStorage:participant1 tid:ff131550663de472e562edcc10f7a0d3 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:46:02,084 [canton-env-ec-35] DEBUG c.d.c.r.DbStorage:participant1 tid:ff131550663de472e562edcc10f7a0d3 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-1","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:46:03,636 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:participant1 tid:ff131550663de472e562edcc10f7a0d3 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:05,004 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:ebc78d13e129cfe4692f8b917fa62587 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:05,036 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:participant1 tid:ff131550663de472e562edcc10f7a0d3 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:06,341 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:ebc78d13e129cfe4692f8b917fa62587 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:06,377 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:participant1 tid:ff131550663de472e562edcc10f7a0d3 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:07,688 [canton-env-ec-36] ERROR c.d.c.r.DbStorage:mydomain tid:ebc78d13e129cfe4692f8b917fa62587 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:07,719 [canton-env-ec-35] ERROR c.d.c.r.DbStorage:participant1 tid:ff131550663de472e562edcc10f7a0d3 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:46:02,004 [main] INFO  c.d.c.e.CommunityEnvironment tid:e4b7b35dfae72ede7cc377aff29fe0bc - Automatically starting all instances
2025-08-24 12:46:07,749 [main] ERROR c.d.c.e.CommunityEnvironment tid:e4b7b35dfae72ede7cc377aff29fe0bc - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-24 12:47:35,324 [canton-env-ec-37] INFO  c.d.c.r.DbStorage:participant1 tid:b88f1e168684aac85c09a9d8068df8b2 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:47:35,325 [canton-env-ec-37] DEBUG c.d.c.r.DbStorage:participant1 tid:b88f1e168684aac85c09a9d8068df8b2 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-2","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:47:36,917 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:participant1 tid:b88f1e168684aac85c09a9d8068df8b2 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:35,324 [canton-env-ec-36] INFO  c.d.c.r.DbStorage:mydomain tid:1f67b957a590dbd96d35701a0325beb4 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:47:35,325 [canton-env-ec-36] DEBUG c.d.c.r.DbStorage:mydomain tid:1f67b957a590dbd96d35701a0325beb4 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-1","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:47:36,917 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:1f67b957a590dbd96d35701a0325beb4 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:38,275 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:participant1 tid:b88f1e168684aac85c09a9d8068df8b2 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:38,284 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:1f67b957a590dbd96d35701a0325beb4 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:39,619 [canton-env-ec-37] WARN  c.d.c.r.DbStorage:participant1 tid:b88f1e168684aac85c09a9d8068df8b2 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:39,627 [canton-env-ec-36] WARN  c.d.c.r.DbStorage:mydomain tid:1f67b957a590dbd96d35701a0325beb4 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:40,950 [canton-env-ec-37] ERROR c.d.c.r.DbStorage:participant1 tid:b88f1e168684aac85c09a9d8068df8b2 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:40,961 [canton-env-ec-36] ERROR c.d.c.r.DbStorage:mydomain tid:1f67b957a590dbd96d35701a0325beb4 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:47:35,239 [main] INFO  c.d.c.e.CommunityEnvironment tid:2288ebeadb609e3395bbacdae113349d - Automatically starting all instances
2025-08-24 12:47:40,992 [main] ERROR c.d.c.e.CommunityEnvironment tid:2288ebeadb609e3395bbacdae113349d - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-24 12:48:07,140 [canton-env-ec-35] INFO  c.d.c.r.DbStorage:mydomain tid:625536898e6930554e0cdb776e05256c - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:48:07,141 [canton-env-ec-35] DEBUG c.d.c.r.DbStorage:mydomain tid:625536898e6930554e0cdb776e05256c - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-2","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:48:08,722 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:mydomain tid:625536898e6930554e0cdb776e05256c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:07,140 [canton-env-ec-38] INFO  c.d.c.r.DbStorage:participant1 tid:2818722f18d5fbf687c1438a286f08cb - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:48:07,141 [canton-env-ec-38] DEBUG c.d.c.r.DbStorage:participant1 tid:2818722f18d5fbf687c1438a286f08cb - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-1","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:48:08,722 [canton-env-ec-38] WARN  c.d.c.r.DbStorage:participant1 tid:2818722f18d5fbf687c1438a286f08cb - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:10,076 [canton-env-ec-38] WARN  c.d.c.r.DbStorage:participant1 tid:2818722f18d5fbf687c1438a286f08cb - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:10,079 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:mydomain tid:625536898e6930554e0cdb776e05256c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:11,422 [canton-env-ec-38] WARN  c.d.c.r.DbStorage:participant1 tid:2818722f18d5fbf687c1438a286f08cb - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:11,431 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:mydomain tid:625536898e6930554e0cdb776e05256c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:12,756 [canton-env-ec-38] ERROR c.d.c.r.DbStorage:participant1 tid:2818722f18d5fbf687c1438a286f08cb - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:12,766 [canton-env-ec-35] ERROR c.d.c.r.DbStorage:mydomain tid:625536898e6930554e0cdb776e05256c - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:48:07,063 [main] INFO  c.d.c.e.CommunityEnvironment tid:53d640d517a3c5a170c911383576c768 - Automatically starting all instances
2025-08-24 12:48:12,795 [main] ERROR c.d.c.e.CommunityEnvironment tid:53d640d517a3c5a170c911383576c768 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-24 12:55:42,400 [canton-env-ec-41] INFO  c.d.c.r.DbStorage:participant1 tid:9b90c89728b6dd0d5345d2336be4b3f7 - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:55:42,401 [canton-env-ec-41] DEBUG c.d.c.r.DbStorage:participant1 tid:9b90c89728b6dd0d5345d2336be4b3f7 - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-participant1-2","properties":{"databaseName":"canton_participant","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:55:43,977 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9b90c89728b6dd0d5345d2336be4b3f7 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:42,400 [canton-env-ec-35] INFO  c.d.c.r.DbStorage:mydomain tid:d8eccc4a4d6372a8a5111e372a7b93fc - Overriding numThreads from 1 to 2 for the purpose of db migration, as flyway needs at least 2 threads.
2025-08-24 12:55:42,401 [canton-env-ec-35] DEBUG c.d.c.r.DbStorage:mydomain tid:d8eccc4a4d6372a8a5111e372a7b93fc - Initializing database storage with config: Config(SimpleConfigObject({"connectionTimeout":5000,"dataSourceClass":"org.postgresql.ds.PGSimpleDataSource","initializationFailTimeout":1,"numThreads":2,"poolName":"slick-mydomain-1","properties":{"databaseName":"canton_domain","password":"****","portNumber":"5432","serverName":"localhost","sslMode":"require","user":"${env:CANTON_DB_USER}"}}))
2025-08-24 12:55:43,977 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:mydomain tid:d8eccc4a4d6372a8a5111e372a7b93fc - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:45,334 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9b90c89728b6dd0d5345d2336be4b3f7 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:45,335 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:mydomain tid:d8eccc4a4d6372a8a5111e372a7b93fc - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:46,665 [canton-env-ec-35] WARN  c.d.c.r.DbStorage:mydomain tid:d8eccc4a4d6372a8a5111e372a7b93fc - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:46,668 [canton-env-ec-41] WARN  c.d.c.r.DbStorage:participant1 tid:9b90c89728b6dd0d5345d2336be4b3f7 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, retrying in 300ms: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:48,017 [canton-env-ec-35] ERROR c.d.c.r.DbStorage:mydomain tid:d8eccc4a4d6372a8a5111e372a7b93fc - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:48,018 [canton-env-ec-41] ERROR c.d.c.r.DbStorage:participant1 tid:9b90c89728b6dd0d5345d2336be4b3f7 - Operation com.digitalasset.canton.resource.DbStorage.createDatabase failed, exhausted retries: Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

2025-08-24 12:55:42,328 [main] INFO  c.d.c.e.CommunityEnvironment tid:caeeb5c5ab7468182721983848f1fd80 - Automatically starting all instances
2025-08-24 12:55:48,055 [main] ERROR c.d.c.e.CommunityEnvironment tid:caeeb5c5ab7468182721983848f1fd80 - Failed to start mydomain: failed to migrate database of mydomain: DatabaseError(
  Failed to connect to database: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:92)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource$.forConfig(HikariCPJdbcDataSource.scala:21)
	at slick.jdbc.JdbcDataSource$.forConfig(JdbcDataSource.scala:47)
	at com.digitalasset.canton.resource.DbStorage$.createJdbcBackendDatabase(Storage.scala:764)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$4(Storage.scala:741)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retry$1(RetryEither.scala:42)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing(PerformUnlessClosing.scala:62)
	at com.digitalasset.canton.lifecycle.PerformUnlessClosing.performUnlessClosing$(PerformUnlessClosing.scala:54)
	at com.digitalasset.canton.environment.ManagedNodes.performUnlessClosing(Nodes.scala:104)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1(RetryEither.scala:62)
	at com.digitalasset.canton.util.retry.RetryEither$.$anonfun$retryUnlessShutdown$1$adapted(RetryEither.scala:59)
	at cats.data.EitherTMonad.$anonfun$tailRecM$1(EitherT.scala:1212)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.go$1(UnlessShutdown.scala:96)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:101)
	at com.digitalasset.canton.lifecycle.UnlessShutdown$$anon$1.tailRecM(UnlessShutdown.scala:90)
	at cats.data.EitherTMonad.tailRecM(EitherT.scala:1211)
	at cats.data.EitherTMonad.tailRecM$(EitherT.scala:1209)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.data.EitherTInstances1$$anon$18.tailRecM(EitherT.scala:1102)
	at cats.syntax.FlatMapIdOps$.tailRecM$extension(flatMap.scala:135)
	at com.digitalasset.canton.util.retry.RetryEither$.retryUnlessShutdown(RetryEither.scala:59)
	at com.digitalasset.canton.util.retry.RetryEither$.retry(RetryEither.scala:41)
	at com.digitalasset.canton.resource.DbStorage$.$anonfun$createDatabase$1(Storage.scala:747)
	at com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:97)
	at com.digitalasset.canton.resource.DbStorage$.createDatabase(Storage.scala:686)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb(DbMigrations.scala:78)
	at com.digitalasset.canton.resource.DbMigrations.withCreatedDb$(DbMigrations.scala:68)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withCreatedDb(DbMigrations.scala:293)
	at com.digitalasset.canton.resource.CommunityDbMigrations.withDb(DbMigrations.scala:305)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate(DbMigrations.scala:185)
	at com.digitalasset.canton.resource.DbMigrations.checkAndMigrate$(DbMigrations.scala:180)
	at com.digitalasset.canton.resource.CommunityDbMigrations.checkAndMigrate(DbMigrations.scala:293)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$checkMigration$1(Nodes.scala:330)
	at com.digitalasset.canton.environment.ManagedNodes.runIfUsingDatabase(Nodes.scala:301)
	at com.digitalasset.canton.environment.ManagedNodes.checkMigration(Nodes.scala:312)
	at com.digitalasset.canton.environment.ManagedNodes.$anonfun$startNode$1(Nodes.scala:160)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at com.daml.executors.QueueAwareExecutorService$TrackingRunnable.run(QueueAwareExecutorService.scala:98)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1423)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "${env:CANTON_DB_USER}"
	at org.postgresql.Driver$ConnectThread.getResult(Driver.java:397)
	at org.postgresql.Driver.connect(Driver.java:305)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:104)
	at org.postgresql.ds.common.BaseDataSource.getConnection(BaseDataSource.java:88)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	... 47 more

)
2025-08-24 12:58:52,774 [main] INFO  c.d.c.e.CommunityEnvironment tid:27c40aedeba63aa5507f1f62b3bec3f0 - Automatically starting all instances
2025-08-24 12:58:54,471 [main] ERROR c.d.c.e.CommunityEnvironment tid:27c40aedeba63aa5507f1f62b3bec3f0 - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
2025-08-24 12:59:09,594 [main] INFO  c.d.c.e.CommunityEnvironment tid:e267ee0e0c25b6c023a6c1576546c0d6 - Automatically starting all instances
2025-08-24 12:59:11,497 [main] ERROR c.d.c.e.CommunityEnvironment tid:e267ee0e0c25b6c023a6c1576546c0d6 - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
2025-08-24 12:59:45,284 [canton-env-ec-70] DEBUG c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:5c2d6a18e0f89e7052f80e1d95d39443 - Completing writer flow
2025-08-24 12:59:45,285 [canton-env-ec-70] DEBUG c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:5c2d6a18e0f89e7052f80e1d95d39443 - Closing store
2025-08-24 12:59:45,286 [canton-env-ec-70] DEBUG c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:5c2d6a18e0f89e7052f80e1d95d39443 - Failed to close running writer
org.apache.pekko.stream.AbruptTerminationException: Processor actor [Actor[pekko://canton-actor-system/system/Materializers/StreamSupervisor-0/flow-2-0-ignoreSink#2083801476]] terminated abruptly
2025-08-24 12:59:45,287 [canton-env-ec-70] WARN  c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:5c2d6a18e0f89e7052f80e1d95d39443 - Sequencer writer has completed with an unrecoverable error
org.apache.pekko.stream.AbruptTerminationException: Processor actor [Actor[pekko://canton-actor-system/system/Materializers/StreamSupervisor-0/flow-2-0-ignoreSink#2083801476]] terminated abruptly
2025-08-24 13:04:39,557 [canton-env-ec-35] DEBUG c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:7cb82a5464f3157fd65bf9cc28a2d590 - Completing writer flow
2025-08-24 13:04:39,559 [canton-env-ec-35] DEBUG c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:7cb82a5464f3157fd65bf9cc28a2d590 - Closing store
2025-08-24 13:04:39,559 [canton-env-ec-35] DEBUG c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:7cb82a5464f3157fd65bf9cc28a2d590 - Failed to close running writer
org.apache.pekko.stream.AbruptTerminationException: Processor actor [Actor[pekko://canton-actor-system/system/Materializers/StreamSupervisor-0/flow-2-0-ignoreSink#739733304]] terminated abruptly
2025-08-24 13:04:39,560 [canton-env-ec-35] WARN  c.d.c.d.s.s.SequencerWriter:domain=mydomain tid:7cb82a5464f3157fd65bf9cc28a2d590 - Sequencer writer has completed with an unrecoverable error
org.apache.pekko.stream.AbruptTerminationException: Processor actor [Actor[pekko://canton-actor-system/system/Materializers/StreamSupervisor-0/flow-2-0-ignoreSink#739733304]] terminated abruptly
2025-08-24 13:47:21,167 [main] INFO  c.d.c.e.CommunityEnvironment tid:21eae2d3c7a10e4bc500ff40e4393f60 - Automatically starting all instances
2025-08-24 13:47:22,909 [main] ERROR c.d.c.e.CommunityEnvironment tid:21eae2d3c7a10e4bc500ff40e4393f60 - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
2025-08-24 15:51:25,762 [canton-env-ec-64] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:d6ae76fbd94d2e086976d2fa5860e978 - PERMISSION_DENIED(7,d6ae76fb): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 16:36:25,649 [canton-env-ec-116] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:6f7d7f7c50a73d39a1f2fbd670be8eee - PERMISSION_DENIED(7,6f7d7f7c): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 16:42:01,507 [canton-env-ec-37] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:b5b4e2ee907a4dec2a0a8df9f5d8a356 - PERMISSION_DENIED(7,b5b4e2ee): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 16:44:19,822 [canton-env-ec-163] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:a82adcfe20dc0dcead7c27aafcbeba29 - PERMISSION_DENIED(7,a82adcfe): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 16:47:05,834 [canton-env-ec-41] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:76262f1e760317264080d35cd462126c - PERMISSION_DENIED(7,76262f1e): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 16:48:38,111 [canton-env-ec-37] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:70cd5104ea4db8493110568e520b8545 - PERMISSION_DENIED(7,70cd5104): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 19:19:09,953 [canton-env-ec-155] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:672f0734199b340c8346c25147ce09f5 - Authorization error: Could not parse JWT token: Could not read value for sub
2025-08-24 19:19:09,963 [canton-env-ec-161] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:672f0734199b340c8346c25147ce09f5 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:52496: received a message 
  Request tid:672f0734199b340c8346c25147ce09f5
2025-08-24 19:19:09,966 [canton-env-ec-161] WARN  c.d.c.a.Authorizer:participant=participant1 tid:672f0734199b340c8346c25147ce09f5 - UNAUTHENTICATED(6,672f0734): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-24 19:42:18,687 [canton-env-ec-155] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:ace1fe432632f4a48e076e095b62d61c - PERMISSION_DENIED(7,ace1fe43): Could not resolve is_deactivated status for user 'bank_user' and identity_provider_id 'Default' due to 'UserNotFound(bank_user)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-24 19:43:31,026 [canton-env-ec-163] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:0fa687e9643e9696aa7119768e05b0ca - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:52496: received a message 
  Request tid:0fa687e9643e9696aa7119768e05b0ca
2025-08-24 19:43:31,028 [canton-env-ec-163] WARN  c.d.c.a.Authorizer:participant=participant1 tid:0fa687e9643e9696aa7119768e05b0ca - PERMISSION_DENIED(7,0fa687e9): Claims are only valid for participantId 'participant1', actual participantId is 'participant1::1220b845dcf0d9cf52ce1e7457a744a6f3de7eff4a9ee95261b69405d1e0de8a768d' err-context:{location=Authorizer.scala:305} 
2025-08-24 19:48:08,032 [canton-env-ec-161] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:4408463dbe7037c24dbc50cce4dced6c - Authorization error: Could not parse JWT token: Could not read value for sub
2025-08-24 19:48:08,035 [canton-env-ec-167] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:4408463dbe7037c24dbc50cce4dced6c - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:52496: received a message 
  Request tid:4408463dbe7037c24dbc50cce4dced6c
2025-08-24 19:48:08,035 [canton-env-ec-167] WARN  c.d.c.a.Authorizer:participant=participant1 tid:4408463dbe7037c24dbc50cce4dced6c - UNAUTHENTICATED(6,4408463d): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-24 20:28:27,003 [canton-env-ec-41] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:825a23bb34fd88be50cbb1eb522089e0 - Authorization error: Could not parse JWT token: Could not read value for sub
2025-08-24 20:28:27,006 [canton-env-ec-37] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:825a23bb34fd88be50cbb1eb522089e0 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:54950: received a message 
  Request tid:825a23bb34fd88be50cbb1eb522089e0
2025-08-24 20:28:27,006 [canton-env-ec-37] WARN  c.d.c.a.Authorizer:participant=participant1 tid:825a23bb34fd88be50cbb1eb522089e0 - UNAUTHENTICATED(6,825a23bb): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-24 20:44:35,800 [canton-env-ec-37] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:3500e8dc37f0aa713afc181c9f4b8e6f - Authorization error: Could not parse JWT token: Could not read value for sub
2025-08-24 20:44:35,803 [canton-env-ec-116] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:3500e8dc37f0aa713afc181c9f4b8e6f - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:54950: received a message 
  Request tid:3500e8dc37f0aa713afc181c9f4b8e6f
2025-08-24 20:44:35,804 [canton-env-ec-116] WARN  c.d.c.a.Authorizer:participant=participant1 tid:3500e8dc37f0aa713afc181c9f4b8e6f - UNAUTHENTICATED(6,3500e8dc): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-24 21:41:54,936 [canton-env-ec-65] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:8090357b40b7510ebb31d67452655734 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:58808: received a message 
  Request tid:8090357b40b7510ebb31d67452655734
2025-08-24 21:41:54,937 [canton-env-ec-65] WARN  c.d.c.a.Authorizer:participant=participant1 tid:8090357b40b7510ebb31d67452655734 - PERMISSION_DENIED(7,8090357b): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-24 21:41:54,966 [canton-env-ec-116] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:63755a6c21e51bb305fd90c3727e72df - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:58808: received a message 
  Request tid:63755a6c21e51bb305fd90c3727e72df
2025-08-24 21:41:54,967 [canton-env-ec-116] WARN  c.d.c.a.Authorizer:participant=participant1 tid:63755a6c21e51bb305fd90c3727e72df - PERMISSION_DENIED(7,63755a6c): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-24 21:41:55,000 [canton-env-ec-116] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:536213be7f9a90b0d9c351614b150de7 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:58808: received a message 
  Request tid:536213be7f9a90b0d9c351614b150de7
2025-08-24 21:41:55,001 [canton-env-ec-116] WARN  c.d.c.a.Authorizer:participant=participant1 tid:536213be7f9a90b0d9c351614b150de7 - PERMISSION_DENIED(7,536213be): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-24 21:41:55,256 [canton-env-ec-155] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:81e000a623e6ce35e6925934192db634 - Authorization error: Could not verify JWT token: The string '�{ږ'' doesn't have a valid JSON format.
2025-08-24 21:41:55,259 [canton-env-ec-167] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:81e000a623e6ce35e6925934192db634 - Failed to authorize the token: The string '�{ږ'' doesn't have a valid JSON format.
2025-08-24 21:41:55,260 [canton-env-ec-155] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:81e000a623e6ce35e6925934192db634 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:58808: received a message 
  Request tid:81e000a623e6ce35e6925934192db634
2025-08-24 21:41:55,261 [canton-env-ec-155] WARN  c.d.c.a.Authorizer:participant=participant1 tid:81e000a623e6ce35e6925934192db634 - UNAUTHENTICATED(6,81e000a6): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-25 04:19:26,588 [canton-env-ec-160] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:171312d04dbc6ea755dd8662a61900ed - Authorization error: Audience doesn't match the target value
2025-08-25 04:19:26,601 [canton-env-ec-163] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:171312d04dbc6ea755dd8662a61900ed - Failed to authorize the token: IdentityProviderConfigByIssuerNotFound(canton-jwt-issuer)
2025-08-25 04:19:26,605 [canton-env-ec-163] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:171312d04dbc6ea755dd8662a61900ed - Request c.d.l.a.v.a.UserManagementService/ListUserRights by /127.0.0.1:34978: received a message 
  Request tid:171312d04dbc6ea755dd8662a61900ed
2025-08-25 04:19:26,608 [canton-env-ec-163] WARN  c.d.c.a.Authorizer:participant=participant1 tid:171312d04dbc6ea755dd8662a61900ed - UNAUTHENTICATED(6,171312d0): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-25 04:20:39,235 [canton-env-ec-160] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:4ff7cb9cb14f0c6dc550ff9525f2236c - PERMISSION_DENIED(7,4ff7cb9c): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-25 04:21:34,165 [canton-env-ec-106] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:2cab1a655f5d1f27455f4a32bb5bf3e9 - PERMISSION_DENIED(7,2cab1a65): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-25 04:21:49,598 [canton-env-ec-167] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:c25f4fa976edf2f9e22a627229fd6ae6 - PERMISSION_DENIED(7,c25f4fa9): Could not resolve is_deactivated status for user 'bank_admin' and identity_provider_id 'Default' due to 'UserNotFound(bank_admin)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-25 04:24:21,928 [main] INFO  c.d.c.e.CommunityEnvironment tid:4950eb439999812f0710d76fdf1d5a0e - Automatically starting all instances
2025-08-25 04:24:23,752 [main] ERROR c.d.c.e.CommunityEnvironment tid:4950eb439999812f0710d76fdf1d5a0e - Failed to start mydomain: Failed to bind to address /0.0.0.0:5019
2025-08-25 04:41:13,172 [canton-env-ec-169] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:78ffa8f57dd40049a3c8afc6cfeb8a8d - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:34978: received a message 
  Request tid:78ffa8f57dd40049a3c8afc6cfeb8a8d
2025-08-25 04:41:13,173 [canton-env-ec-169] WARN  c.d.c.a.Authorizer:participant=participant1 tid:78ffa8f57dd40049a3c8afc6cfeb8a8d - PERMISSION_DENIED(7,78ffa8f5): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-25 04:42:24,126 [canton-env-ec-162] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:2ef2ed6e22f5a6cbc9b557c20296b597 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:34978: received a message 
  Request tid:2ef2ed6e22f5a6cbc9b557c20296b597
2025-08-25 04:42:24,127 [canton-env-ec-162] WARN  c.d.c.a.Authorizer:participant=participant1 tid:2ef2ed6e22f5a6cbc9b557c20296b597 - PERMISSION_DENIED(7,2ef2ed6e): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-25 04:44:42,655 [canton-env-ec-38] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:d9505c10a185d8cf02069d659b765f0b - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:34978: received a message 
  Request tid:d9505c10a185d8cf02069d659b765f0b
2025-08-25 04:44:42,656 [canton-env-ec-38] WARN  c.d.c.a.Authorizer:participant=participant1 tid:d9505c10a185d8cf02069d659b765f0b - PERMISSION_DENIED(7,d9505c10): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-25 04:57:23,750 [canton-env-ec-36] WARN  c.d.c.a.AuthServiceJWT:participant=participant1 tid:7d3d3fcd20076ba3423c5ba722132698 - Authorization error: Could not verify JWT token: The Token's Signature resulted invalid when verified using the Algorithm: SHA256withRSA
2025-08-25 04:57:23,756 [canton-env-ec-35] WARN  c.d.c.l.a.a.IdentityProviderAwareAuthServiceImpl:participant=participant1 tid:7d3d3fcd20076ba3423c5ba722132698 - Failed to authorize the token: IdentityProviderConfigByIssuerNotFound(canton-jwt-issuer)
2025-08-25 04:57:23,757 [canton-env-ec-38] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:7d3d3fcd20076ba3423c5ba722132698 - Request c.d.l.a.v.a.UserManagementService/ListUserRights by /127.0.0.1:34978: received a message 
  Request tid:7d3d3fcd20076ba3423c5ba722132698
2025-08-25 04:57:23,758 [canton-env-ec-38] WARN  c.d.c.a.Authorizer:participant=participant1 tid:7d3d3fcd20076ba3423c5ba722132698 - UNAUTHENTICATED(6,7d3d3fcd): The command is missing a (valid) JWT token err-context:{location=Authorizer.scala:334} 
2025-08-25 07:08:52,700 [canton-env-ec-163] WARN  c.d.c.l.a.a.i.UserBasedAuthorizationInterceptor:participant=participant1 tid:c932f887b49b53344a3ecc050a82ab3a - PERMISSION_DENIED(7,c932f887): Could not resolve is_deactivated status for user 'alice_bank_token' and identity_provider_id 'Default' due to 'UserNotFound(alice_bank_token)' err-context:{location=UserBasedAuthorizationInterceptor.scala:133} 
2025-08-25 08:33:14,784 [canton-env-ec-169] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:cbb01099df0e2e7e86497428205fa49b - Request c.d.l.a.v.a.UserManagementService/CreateUser by /127.0.0.1:34978: received a message 
  Request tid:cbb01099df0e2e7e86497428205fa49b
2025-08-25 08:33:14,785 [canton-env-ec-169] WARN  c.d.c.a.Authorizer:participant=participant1 tid:cbb01099df0e2e7e86497428205fa49b - PERMISSION_DENIED(7,cbb01099): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
2025-08-25 13:40:59,717 [canton-env-ec-38] DEBUG c.d.c.n.g.ApiRequestLogger:participant=participant1 tid:bb7963642461fd9a735b6e4a90d63479 - Request c.d.l.a.v.a.PartyManagementService/ListKnownParties by /127.0.0.1:46464: received a message 
  Request tid:bb7963642461fd9a735b6e4a90d63479
2025-08-25 13:40:59,717 [canton-env-ec-38] WARN  c.d.c.a.Authorizer:participant=participant1 tid:bb7963642461fd9a735b6e4a90d63479 - PERMISSION_DENIED(7,bb796364): Claims do not authorize the use of administrative services. err-context:{location=Authorizer.scala:305} 
