# canton-production.conf – TLS‑enabled, hardened configuration

_shared {
  storage {
    type = postgres
    config {
      dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
      properties = {
        serverName = "localhost"
        portNumber = "5432"
        user       = "${env:CANTON_DB_USER}"    # load from environment
        password   = "${env:CANTON_DB_PASSWORD}"
        sslMode    = "require"                  # SSL on DB connections
      }
    }
    parameters {
      migrate-and-start    = true
      fail-fast-on-startup = true
    }
  }
}

canton {
  # Disable testing commands for production
  features {
    enable-testing-commands = yes
  }

  participants {
    participant1 {
      storage = ${_shared.storage}
      storage.config.properties.databaseName = "canton_participant"

      admin-api {
        address = "0.0.0.0"
        port    = 5012
        tls {
          cert-chain-file = "config/tls/admin-api.crt"
          private-key-file = "config/tls/admin-api.key"
          trust-collection-file = "config/tls/root-ca.crt"
          client-auth = {
            type = "optional"
          }
        }
      }

      ledger-api {
        address = "0.0.0.0"
        port    = 5011
        tls {
          cert-chain-file = "config/tls/ledger-api.crt"
          private-key-file = "config/tls/ledger-api.key"
          trust-collection-file = "config/tls/root-ca.crt"
          client-auth = {
            type = "optional"
          }
        }
        auth-services = [{
          type        = jwt-rs-256-crt
          certificate = "config/jwt/jwt-sign.crt"
        }]
      }

      # fix participant UID
      init.identity.node-identifier.type = explicit
      init.identity.node-identifier.name = "participant1"
    }
  }

  domains {
    mydomain {
      storage = ${_shared.storage}
      storage.config.properties.databaseName = "canton_domain"

      public-api {
        address = "0.0.0.0"
        port    = 5018
        tls {
          cert-chain-file = "config/tls/public-api.crt"
          private-key-file = "config/tls/public-api.key"
        }
      }

      admin-api {
        address = "0.0.0.0"
        port    = 5019
        tls {
          cert-chain-file = "config/tls/admin-api.crt"
          private-key-file = "config/tls/admin-api.key"
          trust-collection-file = "config/tls/root-ca.crt"
          client-auth = {
            type = "optional"
          }
        }
      }

      init.domain-parameters.protocol-version = 7
    }
  }
}