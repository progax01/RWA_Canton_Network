# NGINX Configuration for RWA Platform JSON API
# Place this in /etc/nginx/sites-available/ and create a symlink to sites-enabled/

upstream json_api_backend {
    server 127.0.0.1:7575;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=create_limit:10m rate=20r/m;

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com;  # Replace with your actual domain

    # SSL Configuration
    ssl_certificate /path/to/your/fullchain.pem;  # Replace with your SSL cert
    ssl_certificate_key /path/to/your/privkey.pem;  # Replace with your SSL key
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/rwa-api.access.log;
    error_log /var/log/nginx/rwa-api.error.log;

    # API endpoints with rate limiting
    location /api/ {
        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        # CORS headers for browser clients
        add_header Access-Control-Allow-Origin "https://your-frontend-domain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Proxy to JSON API
        proxy_pass http://json_api_backend/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for streaming queries
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Stricter rate limiting for create/exercise operations
    location ~ ^/api/(create|exercise)/ {
        limit_req zone=create_limit burst=5 nodelay;
        
        # Same proxy settings as above
        proxy_pass http://json_api_backend/v1/$1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint (no auth required)
    location /health {
        proxy_pass http://json_api_backend/livez;
        access_log off;
    }

    # Block direct access to admin endpoints
    location ~ ^/api/(parties|users|admin)/ {
        deny all;
        return 403;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com;  # Replace with your actual domain
    return 301 https://$server_name$request_uri;
}